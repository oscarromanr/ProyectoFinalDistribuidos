/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package guis;

import interfaces.iEventListener;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;
import javax.swing.table.TableColumnModel;
import negocio.ConversorBinario;

/**
 *
 * @author Fernando
 */
public class frmTablaDatosHumedad extends javax.swing.JFrame implements iEventListener{

    private List<List<String>> datosTabla;
    DefaultTableModel modeloTabla;
    TableColumnModel modeloColumna;
    
    /**
     * Creates new form frmTablaDatosTemperatura
     */
    public frmTablaDatosHumedad() {
        initComponents();
        datosTabla = new ArrayList<>();
        tblDatos.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
        modeloColumna = this.tblDatos.getColumnModel();
        modeloTabla = (DefaultTableModel) this.tblDatos.getModel();
        scrollPane.setHorizontalScrollBarPolicy(JScrollPane.HORIZONTAL_SCROLLBAR_ALWAYS);
        setTitle("Tabla de humedad");
        setSize(750,500);
        setLocationRelativeTo(null);
        setDefaultCloseOperation(DISPOSE_ON_CLOSE);
        setVisible(false);
    }
    
    private void llenarTabla(String humedad, String idSensor) {
        boolean filaExiste = false;
        int i = 0;
        while(i < datosTabla.size())
        {
            if(idSensor.equals(datosTabla.get(i).get(0)))
            {
                datosTabla.get(i).add(humedad);
                filaExiste = true;
            }
            i++;
        }
        if(!filaExiste)
        {
            List<String> lista = new ArrayList<>();
            lista.add(idSensor);
            lista.add(humedad);
            datosTabla.add(lista);
        }
        
        
        modeloTabla = new DefaultTableModel(datosTabla.size(), datosTabla.get(0).size());
        modeloTabla.setRowCount(0);
        
        
        int u = 0;
        while(u < datosTabla.size())
        {
            Object[] fila = new Object[datosTabla.get(u).size()];
            if(datosTabla.get(u).size() > modeloTabla.getColumnCount())
            {
                String a = String.valueOf((datosTabla.get(u).size()-1));
                Object[] columna = new Object[datosTabla.size()];
                columna[u] = datosTabla.get(u).get(modeloTabla.getColumnCount());
                modeloTabla.addColumn(a, columna);
                this.tblDatos.setModel(modeloTabla);
            }
            //fila[0] = ;
            int h = 0;
            while(h < datosTabla.get(u).size())
            {
                fila[h] = datosTabla.get(u).get(h);
                h++;
            }
            modeloTabla.addRow(fila);
            u++;
        }
        this.tblDatos.setModel(modeloTabla);
        TableColumnModel columnModel = tblDatos.getColumnModel();
        // Modificar el ancho de las columnas
        int c = 0;
        while(c < columnModel.getColumnCount())
        {
            columnModel.getColumn(c).setPreferredWidth(150);
            c++;
        }
    }
    
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        scrollPane = new javax.swing.JScrollPane();
        tblDatos = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        tblDatos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "id_sensor", "1", "2", "3", "4"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Long.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, true, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        scrollPane.setViewportView(tblDatos);
        if (tblDatos.getColumnModel().getColumnCount() > 0) {
            tblDatos.getColumnModel().getColumn(1).setResizable(false);
            tblDatos.getColumnModel().getColumn(2).setResizable(false);
            tblDatos.getColumnModel().getColumn(3).setResizable(false);
            tblDatos.getColumnModel().getColumn(4).setResizable(false);
        }

        getContentPane().add(scrollPane, java.awt.BorderLayout.CENTER);

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frmTablaDatosHumedad.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frmTablaDatosHumedad.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frmTablaDatosHumedad.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frmTablaDatosHumedad.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new frmTablaDatosHumedad().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane scrollPane;
    private javax.swing.JTable tblDatos;
    // End of variables declaration//GEN-END:variables

    @Override
    public void update(String mensaje) {
        String palabraBuscadaTemperatura = "Temperatura: ";
        String palabraBuscadaHumedad = "Humedad: ";
        String palabraBuscadaGrados = " grados";
        String palabraBuscadaSensor = "Sensor: ";

        int indiceInicioPalabraSensor = mensaje.indexOf(palabraBuscadaSensor);
        int indiceInicioPalabraTemperatura = mensaje.indexOf(palabraBuscadaTemperatura);
        int indiceInicioPalabraHumedad = mensaje.indexOf(palabraBuscadaHumedad);
        int indiceInicioPalabraGrados = mensaje.indexOf(palabraBuscadaGrados);

        String idSensor = "0";
        if (indiceInicioPalabraSensor != -1) {
            int indiceFinPalabraSensor = indiceInicioPalabraSensor + palabraBuscadaSensor.length();
            String sensorBinario = mensaje.substring(indiceFinPalabraSensor, (indiceInicioPalabraTemperatura - 2));
            idSensor = ConversorBinario.getInstance().revertirFormatoBinario(sensorBinario);
        } else {
            System.out.println("La palabra '" + palabraBuscadaTemperatura + "' no se encuentra en la cadena.");
        }
        
        String humedad = "0";
        //"Temperatura: 00110010 00110100 00101110 00110011 00111001 00111000 00111001 00110001 00110111 00111000 00110100 00110010 00110011 00111001 00110010 00110011 00110011 grados, Humedad: 00110111 00110100 00101110 00110001 00110000 00110001 00110101 00111000 00111001 00110101 00111001 00111001 00110111 00110100 00110010 00111001 00110100 "
        if (indiceInicioPalabraHumedad != -1) {
            int indiceFinPalabraHumedad = indiceInicioPalabraHumedad + palabraBuscadaHumedad.length();
            String humedadBinario = mensaje.substring(indiceFinPalabraHumedad, mensaje.length()-1);
            humedad = ConversorBinario.getInstance().revertirFormatoBinario(humedadBinario);
        } else {
            System.out.println("La palabra '" + palabraBuscadaHumedad + "' no se encuentra en la cadena.");
        }
        llenarTabla(humedad, idSensor);
    }
}
